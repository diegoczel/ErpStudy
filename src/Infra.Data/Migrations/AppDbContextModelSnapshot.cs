// <auto-generated />
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Models.ApontamentoProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Empresa")
                        .HasColumnType("int");

                    b.Property<int>("OrdemProducaoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoteiroProducaoDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("RoteiroProducaoOrigemId")
                        .HasColumnType("int");

                    b.Property<int>("RoteiroProducaoOrigemId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdemProducaoId");

                    b.HasIndex("RoteiroProducaoOrigemId");

                    b.HasIndex("RoteiroProducaoOrigemId1");

                    b.ToTable("ApontamentoProducao");
                });

            modelBuilder.Entity("Domain.Models.ConsumoProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApontamentoProducaoId")
                        .HasColumnType("int");

                    b.Property<int>("Empresa")
                        .HasColumnType("int");

                    b.Property<int>("OrdemProducaoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApontamentoProducaoId");

                    b.HasIndex("OrdemProducaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ConsumoProducao");
                });

            modelBuilder.Entity("Domain.Models.LinhaProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Empresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LinhaProducao");
                });

            modelBuilder.Entity("Domain.Models.OrdemProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Empresa")
                        .HasColumnType("int");

                    b.Property<int>("LinhaProducaoId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeAbertura")
                        .HasColumnType("float");

                    b.Property<double>("QuantidadeFinalizada")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinhaProducaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("OrdemProducao");
                });

            modelBuilder.Entity("Domain.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProdutoTipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Domain.Models.RecursosProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Empresa")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadePadrao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoteiroProducaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("RoteiroProducaoId");

                    b.ToTable("RecursosProducao");
                });

            modelBuilder.Entity("Domain.Models.RoteiroProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Empresa")
                        .HasColumnType("int");

                    b.Property<int>("LinhaProducaoId")
                        .HasColumnType("int");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinhaProducaoId");

                    b.ToTable("RoteiroProducao");
                });

            modelBuilder.Entity("Domain.Models.ApontamentoProducao", b =>
                {
                    b.HasOne("Domain.Models.OrdemProducao", "OrdemProducao")
                        .WithMany()
                        .HasForeignKey("OrdemProducaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Models.RoteiroProducao", "RoteiroProducaoDestino")
                        .WithMany()
                        .HasForeignKey("RoteiroProducaoOrigemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Models.RoteiroProducao", "RoteiroProducaoOrigem")
                        .WithMany()
                        .HasForeignKey("RoteiroProducaoOrigemId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemProducao");

                    b.Navigation("RoteiroProducaoDestino");

                    b.Navigation("RoteiroProducaoOrigem");
                });

            modelBuilder.Entity("Domain.Models.ConsumoProducao", b =>
                {
                    b.HasOne("Domain.Models.ApontamentoProducao", "ApontamentoProducao")
                        .WithMany()
                        .HasForeignKey("ApontamentoProducaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Models.OrdemProducao", "OrdemProducao")
                        .WithMany()
                        .HasForeignKey("OrdemProducaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApontamentoProducao");

                    b.Navigation("OrdemProducao");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Models.OrdemProducao", b =>
                {
                    b.HasOne("Domain.Models.LinhaProducao", "LinhaProducao")
                        .WithMany()
                        .HasForeignKey("LinhaProducaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LinhaProducao");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Models.RecursosProducao", b =>
                {
                    b.HasOne("Domain.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.RoteiroProducao", "RoteiroProducao")
                        .WithMany()
                        .HasForeignKey("RoteiroProducaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("RoteiroProducao");
                });

            modelBuilder.Entity("Domain.Models.RoteiroProducao", b =>
                {
                    b.HasOne("Domain.Models.LinhaProducao", "LinhaProducao")
                        .WithMany()
                        .HasForeignKey("LinhaProducaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LinhaProducao");
                });
#pragma warning restore 612, 618
        }
    }
}
